<!DOCTYPE html>
<html lang="en">
    <head>

      <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width, initial-scale=1">

      <meta name="apple-mobile-web-app-capable" content="yes">
      <link rel="apple-touch-icon" href="img/quote.jpeg" />
      <link rel="apple-touch-startup-image" href="img/quote.jpeg" />
      <meta name="mobile-web-app-capable" content="yes">
      <link rel="touch-icon" href="img/quote.jpeg" />
      <link rel="touch-startup-image" href="img/quote.jpeg" />

      <!-- Bootstrap -->
      <link href="bower_components/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
      <link href="bower_components/jquery-mobile/css/themes/default/jquery.mobile.css" rel="stylesheet">
      <link rel="stylesheet" type="text/css" href="css/main.css" media="screen" />

      <title>guyirvine.com</title>

        <style>
        header {
          background-color: rgb(58,87,149);
          padding: 0.7em;
        }
        header input {
          padding: 0.3em;
          padding-bottom: 0.1em;
          width: 100%;
          border: 1px solid black;
        }

        footer {
          background-color: rgb(58,87,149);
          padding: 0.5em;
          position: fixed;
          bottom: 0px;
          width: 100%;
        }
        footer a {
          color: white;
        }

        body {
          margin-left: 0em;
          margin-right: 0em;
        }

        div.screen {
          margin-left: 1em;
          margin-right: 1em;
        }

            </style>
    </head>
    <body>

      <header>
        <form data-bind="submit: run">
          <input placeholder='Search' type='search' class='criteria' data-bind="value: criteria, valueUpdate:'afterkeydown'" />
        </form>
      </header>

      <div data-bind="css: { hide: visible() == false }" class="screen" id="result">
        <br />
        <table>
          <thead>
          </thead>
          <tbody>
          </tbody>
          <tfoot>
          </tfoot>
        </table>

      </div>

      <div data-bind="css: { hide: visible() == false }" class="screen" id="show">
            <h1>
              <div data-bind="with: current" style="display: inline;">
                <a data-bind="click: click, text: name"></a>
                <span data-bind="css: { hide: url() == null }"> <a data-bind="attr: { href: url }" target="_blank"><img style="width: 18px" src="img/basic2-284_maximize_window_external_link-128.png"/></a></span>
              </div>
              <a data-bind="click: add"><img src="img/button_add-128.png" style="width: 16px;"/></a>            </h1>
            <table>
              <thead>
              </thead>
              <tbody>
              </tbody>
              <tfoot>
              </tfoot>
            </table>
          </div>

      <div data-bind="css: { hide: visible() == false }" class="screen" id="add">
          <h1 data-bind="text: title">Add</h1>
          <form data-bind="submit: add">
            <input type='text' class='add' data-bind="value: word" />
            <input type='submit' class='new' />
          </form>
        </div>


      <footer>
        <a href="http://twitter.com/#!/guyirvine" class="handle" title="www">@guyirvine</a>
      </footer>


        <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
        <script src="bower_components/jquery/jquery.min.js"></script>
        <!-- Include all compiled plugins (below), or include individual files as needed -->
        <script src="bower_components/bootstrap/dist/js/bootstrap.min.js"></script>

        <script src="bower_components/jquery-mobile/js/jquery.mobile.define.js"></script>
        <script src="bower_components/jquery-mobile/js/jquery.mobile.js"></script>

        <script src="bower_components/knockout/dist/knockout.js"></script>

        <script src="bower_components/underscore/underscore-min.js"></script>



        <script>
        window.onpopstate = function(event) {
          console.log( event );
          console.log( window.location.hash );
          mvm.popstate( event.state );
        };

        function Word(_id) {
          var self = this;

          this.id = _id;
          this.name = ko.observable("");
          this.label = ko.observable("");
          this.url = ko.observable("");

          self.click = function() {
            mvm.displayShow( self.id );
          };
        }

        function MainViewModel() {
          var self = this;

          self.sbvm = new SearchBoxViewModel(self);
          ko.applyBindings( self.sbvm, $("header")[0] );

          self.shvm = new ShowViewModel(self);
          ko.applyBindings( self.shvm, $("#show")[0] );

          self.sevm = new ResultViewModel(self);
          ko.applyBindings( self.sevm, $("#result")[0] );

          self.addvm = new AddViewModel(self);
          ko.applyBindings( self.addvm, $("#add")[0] );

          self.currentViewModel = self.sevm;
          history.pushState( self.currentViewModel.getState(), self.currentViewModel.getState(), "#result" );
          self.sevm.show();

          self.wordList = [];
          self.wordIdx = {};

          self.popstate = function( state ) {
            self.currentViewModel.hide();
            if ( state === null ) {
              self.currentViewModel = self.sevm;
              self.sevm.criteria( "" );

            } else if ( state.view == "result" ) {
                self.currentViewModel = self.sevm;
                self.sevm.criteria( state.criteria );

            } else if ( state.view == "show" ) {
              self.currentViewModel = self.shvm;
              self.shvm.run( state.id );

            } else if ( state.view == "add" ) {
              self.currentViewModel = self.addvm;
              self.addvm.word( state.word );
            }
            self.currentViewModel.show();
          };

          self.displayShow = function( id ) {
            console.log( "displayShow" );
            self.currentViewModel.hide();

            self.currentViewModel = self.shvm;
            self.shvm.run( id );
            history.pushState( self.currentViewModel.getState(), self.currentViewModel.getState(), "#show" );
            self.shvm.show();
          };

          self.displayResult = function() {
            self.currentViewModel.hide();

            history.pushState( self.currentViewModel.getState(), "", "#result" );
            self.currentViewModel = self.sevm;
            self.sevm.show();
          };

          self.displayAdd = function(_id) {
            self.currentViewModel.hide();

            history.pushState( self.currentViewModel.getState(), "", "#add" );
            self.currentViewModel = self.addvm;
            self.addvm.setId(_id);
            self.addvm.show();
          };


          self.getWord = function(id) {
            if ( self.wordIdx[id] !== undefined ) {
              return self.wordIdx[id];
            }

            var word = new Word(id);
            self.wordList.push(word);
            self.wordIdx[id] = word;

            $.getJSON( "/word/" + id, function( el ) {
              var word = self.wordIdx[el.id];
              word.name( el.name );
              word.label( el.name );
              word.url( el.url );
            });

            return word;
          };
        }

//*******************************************************
        function ShowViewModel( mvm ) {
          var self = this;

          self.visible = ko.observable( false );
          self.show = function() {
            self.visible( true );
          };
          self.hide = function() {
            self.visible( false );
          };

          self.mvm = mvm;

          self.run = function(id) {
            self.current( self.mvm.getWord( id ) );

            $.getJSON( "/children/" + id, function( _l ) {
/*
              <tr>
                <td>
                  <a href="" data-bind="click: click, text: label"></a>
                  <span data-bind="css: { hide: url() == null }"> <a data-bind="attr: { href: url }" target="_blank"><img style="width: 18px" src="img/basic2-284_maximize_window_external_link-128.png"/></a></span>
                </td>
              </tr>
*/

              var content = "";
              _.each( _l, function( el ) {
                content = content + "<tr>" +
                            "<td>" +
                              "<a onclick='mvm.displayShow( " + el.id + " );return false;' class='word-" + el.id + "' href=''>" + el.name + "</a>";
                if ( el.url !== null ) {
                  content = content + '<span> <a href="' + el.url + '" target="_blank"><img style="width: 18px" src="img/basic2-284_maximize_window_external_link-128.png"/></a></span>';
                }
                content = content + "</td>" +
                  "</tr>";

              });

              $( "#show table tbody" ).html( content );

            });
          };

          self.add = function() {
            self.mvm.displayAdd(self.current().id);
          };

          self.current = ko.observable();

          self.getState = function() {
            return { "id": self.current().id, "view": "show" };
          };


        }


        function SearchBoxViewModel(mvm) {
          var self = this;

          self.mvm = mvm;

          self.run = function() {
            $.getJSON( "/search/" + self.criteria(), function( _l ) {
                            var content = "";
                            _.each( _l, function( el ) {
                              content = content + "<tr>" +
                                          "<td>" +
                                            "<a onclick='mvm.displayShow( " + el.id + " );return false;' href=''>" + el.name + "</a>";
                              if ( el.url !== null ) {
                                content = content + '<span> <a href="' + el.url + '" target="_blank"><img style="width: 18px" src="img/basic2-284_maximize_window_external_link-128.png"/></a></span>';
                              }
                              content = content + "</td>" +
                                "</tr>";

                            });

                            $( "#result table tbody" ).html( content );
            });

          };

          self.criteria = ko.observable( "" );
          self.criteria.subscribe( function(value) {
            if ( self.mvm.sevm.visible() === false ) {
              self.mvm.displayResult();
            }
            self.run();
          });
        }



        function ResultViewModel(mvm) {
          var self = this;

          self.visible = ko.observable( false );
          self.show = function() {
            self.visible( true );
          };
          self.hide = function() {
            self.visible( false );
          };

          self.mvm = mvm;

          self.add = function() {
            self.mvm.displayAdd();
          };

          self.run = function() {
            $.getJSON( "/search/" + self.criteria(), function( _l ) {
              /*
                            <tr>
                              <td>
                                <a href="" data-bind="click: click, text: label"></a>
                                <span data-bind="css: { hide: url() == null }"> <a data-bind="attr: { href: url }" target="_blank"><img style="width: 18px" src="img/basic2-284_maximize_window_external_link-128.png"/></a></span>
                              </td>
                            </tr>
              */

                            var content = "";
                            _.each( _l, function( el ) {
                              content = content + "<tr>" +
                                          "<td>" +
                                            "<a onclick='mvm.displayShow( " + el.id + " );return false;' href=''>" + el.name + "</a>";
                              if ( el.url !== null ) {
                                content = content + '<span> <a href="' + el.url + '" target="_blank"><img style="width: 18px" src="img/basic2-284_maximize_window_external_link-128.png"/></a></span>';
                              }
                              content = content + "</td>" +
                                "</tr>";

                            });

                            $( "#result table tbody" ).html( content );
            });

          };

          self.criteria = ko.observable( "an" );

          self.getState = function() {
            return { "criteria": self.criteria(), "view": "result" };
          };
        }


        function AddViewModel(mvm) {
          var self = this;

          self.fromWord = ko.observable( "" );
          self.title = ko.computed(function() {
            var word = "Add2";
            console.log( self.fromWord );
            if( self.fromWord() !== "" ) {
              word = word + "To: " + self.fromWord().name();
            }

            return word;
          });

          self.setId = function(id) {
            self.word("");
            if ( id === undefined ) {
              self.fromWord( "" );
            } else {
              self.fromWord( self.mvm.getWord( id ) );
            }
          };

          self.visible = ko.observable( false );
          self.show = function() {
            self.visible( true );
          };
          self.hide = function() {
            self.visible( false );
          };

          self.mvm = mvm;

          self.add = function() {

            if ( self.word().trim() === "" ) {
              return false;
            }

            $.post( "/word", self.word(), function(id) {
              if ( self.fromWord() === "" ) {
                self.mvm.displayShow( id );
              } else {
                $.post( "/link", JSON.stringify({ word_1: id, word_2: self.fromWord().id }), function() {
                  self.mvm.displayShow( self.fromWord().id );
                });
              }
            });
          };

          self.word = ko.observable("");

          self.getState = function() {
            return { "word": self.word(), "view": "add" };
          };
        }

        var mvm = new MainViewModel();

/*
            $("body").on("swipe",function(){
              console.log( "Swipe Body" );
            });

            $("#content").on("click",function(){
              console.log( "Click" );
            });

            $("#pageone").on("swipeleft",function(){
              console.log( "Content Swipe Left" );
//              $.mobile.changePage("#pagetwo", {transition : "slide", reverse:true});
              $.mobile.changePage("#pagetwo", {transition : "slide"});
            });

            $("#pagetwo").on("swiperight",function(){
              console.log( "Content Swipe Right" );
//              $.mobile.changePage("#pagetwo", {transition : "slide", reverse:true});
              $.mobile.changePage("#pageone", {transition : "slide", reverse:true});
            });
*/
            </script>

    </body>
</html>
